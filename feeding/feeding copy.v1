#include <ArduinoJson.h>

#include <Arduino.h>

#include <ESP8266WiFi.h>
#include <ESP8266WiFiMulti.h>

#include <ESP8266HTTPClient.h>

#include <WiFiClient.h>



ESP8266WiFiMulti WiFiMulti;

void setup()
{

  Serial.begin(115200);
  // Serial.setDebugOutput(true);
  pinMode(BUILTIN_LED,OUTPUT);

  for (uint8_t t = 4; t > 0; t--)
  {
    Serial.printf("[SETUP] WAIT %d...\n", t);
    Serial.flush();
    delay(1000);
  }

  WiFi.mode(WIFI_STA);
  WiFiMulti.addAP("ITRec", "ITRec123!");
}

void loop()
{

  // wait for WiFi connection
  if ((WiFiMulti.run() == WL_CONNECTED))
  {

    WiFiClient client;

    HTTPClient http;

    Serial.print("[HTTP] begin...\n");
    // client.setInsecure();
    if (http.begin(client, "https://poultry.warrdev.com/api/check"))
    { // HTTP

      Serial.print("[HTTP] GET...\n");
      // start connection and send HTTP header
      int httpCode = http.GET();

      // httpCode will be negative on error
      if (httpCode > 0)
      {
        // HTTP header has been send and Server response header has been handled
        Serial.printf("[HTTP] GET... code: %d\n", httpCode);

        // file found at server
        if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_MOVED_PERMANENTLY)
        {
          String payload = http.getString();
          Serial.println(payload);

          // Use https://arduinojson.org/v6/assistant to compute the capacity.
          StaticJsonDocument<96> doc;

          DeserializationError error = deserializeJson(doc, payload);

          if (error)
          {
            Serial.print(F("deserializeJson() failed: "));
            Serial.println(error.f_str());
            return;
          }

          // const char *date = doc["date"]; // "2022-12-06"
          // const char *time = doc["time"]; // "15:38:19"
          int feeding = doc["feeding"];   // 0
          // Serial.println(date);
          // Serial.println(time);
          Serial.println(feeding);
          digitalWrite(BUILTIN_LED,feeding);
        }
      }
      else
      {
        Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
      }

      http.end();
    }
    else
    {
      Serial.printf("[HTTP} Unable to connect\n");
    }
  }
  else{
    Serial.println("failed to connect to network");
  }

  delay(1000);
}
